{"version":3,"sources":["store.ts","components/threeworld/Circle.tsx","components/threeworld/Vectors.tsx","components/threeworld/RenderCycler.tsx","components/ThreeWorld.tsx","components/controls/MatrixInput.tsx","components/controls/MatrixTransform.tsx","components/icons/Refresh.tsx","components/controls/Refresh.tsx","components/Controls.tsx","App.tsx","index.tsx"],"names":["INIT_VECTORS","x","y","z","vectors","coords","i","push","Vector3","squareTemplate","useStore","create","set","get","matrix","Matrix3","setMatrixIndex","index","value","m","elements","newMatrix","resetMatrix","lastMatrix","identity","applyMatrix","updatedVectors","_","cloneDeep","map","vec","applyMatrix3","Circle","vector","appliedMatrix","props","mesh","useRef","useEffect","current","scale","rotate","position","ref","args","color","objVector","m00","m10","m20","m01","m11","m21","m02","m12","m22","Matrix4","eu","Euler","setFromRotationMatrix","initPos","euler","e","TWEEN","to","easing","Quadratic","Out","onUpdate","eulerMatrix","Math","cos","sin","pos","start","Vectors","state","useState","initVectors","setInitVectors","RenderCycler","memo","useThree","gl","scene","camera","render","useCallback","animate","requestAnimationFrame","ThreeWorld","dpr","window","devicePixelRatio","style","height","innerHeight","width","innerWidth","isPerspectiveCamera","near","far","fov","rotation","OrbitControls","MatrixInput","display","gridTemplateColumns","gridTemplateRows","gridGap","zIndex","InputCell","toString","setValue","handleChange","currentTarget","isNaN","parseFloat","type","textAlign","fontFamily","backgroundColor","fontSize","border","outline","margin","onChange","MatrixTransform","transpose","matrixLatex","setMatrixLatex","latex","forEach","elem","toFixed","className","marginTop","onClick","RefreshIcon","version","viewBox","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","d","Refresh","handleResetClick","background","padding","font","cursor","Controls","svd","SingularValueDecomposition","U","fromArray","leftSingularVectors","to1DArray","S","diagonalMatrix","V","rightSingularVectors","bottom","justifyContent","marginBottom","borderColor","borderWidth","borderRadius","borderStyle","alignItems","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ba9fdb43.chunk.js","sourcesContent":["import create from \"zustand\";\nimport { Matrix3, Vector3 } from \"three\";\nimport _ from \"lodash\";\n\n/**\n * Returns a square of three dimensional vector coordinates.\n * @param x width of the x-axis.\n * @param y width of the y-axis.\n * @param z width of the z-axis.\n * @param vectors amount of vectors to use per side.\n * @returns coordinates to the appropriate vectors.\n */\nconst squareTemplate = (\n  x: number,\n  y: number,\n  z: number,\n  vectors: number\n): Array<Vector3> => {\n  let coords = [];\n\n  for (let i = -0.5 * x; i <= 0.5 * x; i += x / (vectors - 1)) {\n    coords.push(new Vector3(i, 0.5 * y, 0.5 * z));\n    coords.push(new Vector3(i, -0.5 * y, 0.5 * z));\n    coords.push(new Vector3(i, 0.5 * y, -0.5 * z));\n    coords.push(new Vector3(i, -0.5 * y, -0.5 * z));\n  }\n\n  for (let i = -0.5 * y; i <= 0.5 * y; i += y / (vectors - 1)) {\n    coords.push(new Vector3(0.5 * x, i, 0.5 * z));\n    coords.push(new Vector3(-0.5 * x, i, 0.5 * z));\n    coords.push(new Vector3(0.5 * x, i, -0.5 * z));\n    coords.push(new Vector3(-0.5 * x, i, -0.5 * z));\n  }\n\n  for (let i = -0.5 * z; i <= 0.5 * z; i += z / (vectors - 1)) {\n    coords.push(new Vector3(0.5 * x, 0.5 * y, i));\n    coords.push(new Vector3(-0.5 * x, 0.5 * y, i));\n    coords.push(new Vector3(0.5 * x, -0.5 * y, i));\n    coords.push(new Vector3(-0.5 * x, -0.5 * y, i));\n  }\n\n  return coords;\n};\n\ninterface Store {\n  matrix: Matrix3;\n  setMatrixIndex: (index: number, value: number) => void;\n  resetMatrix: () => void;\n  applyMatrix: (matrix: Matrix3) => void;\n  lastMatrix: Matrix3;\n  vectors: Array<Vector3>;\n}\n\nconst INIT_VECTORS = squareTemplate(10, 10, 10, 5);\n\nexport const useStore = create<Store>((set, get) => ({\n  matrix: new Matrix3().set(0, 1, 1, 1.41, 2, 0, 0, 1, 1),\n  setMatrixIndex: (index, value) => {\n    const m = get().matrix.elements;\n\n    const newMatrix = new Matrix3();\n    if (index === 0) {\n      newMatrix.set(value, m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8]);\n    } else if (index === 1) {\n      newMatrix.set(m[0], value, m[2], m[3], m[4], m[5], m[6], m[7], m[8]);\n    } else if (index === 2) {\n      newMatrix.set(m[0], m[1], value, m[3], m[4], m[5], m[6], m[7], m[8]);\n    } else if (index === 3) {\n      newMatrix.set(m[0], m[1], m[2], value, m[4], m[5], m[6], m[7], m[8]);\n    } else if (index === 4) {\n      newMatrix.set(m[0], m[1], m[2], m[3], value, m[5], m[6], m[7], m[8]);\n    } else if (index === 5) {\n      newMatrix.set(m[0], m[1], m[2], m[3], m[4], value, m[6], m[7], m[8]);\n    } else if (index === 6) {\n      newMatrix.set(m[0], m[1], m[2], m[3], m[4], m[5], value, m[7], m[8]);\n    } else if (index === 7) {\n      newMatrix.set(m[0], m[1], m[2], m[3], m[4], m[5], m[6], value, m[8]);\n    } else if (index === 8) {\n      newMatrix.set(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], value);\n    }\n\n    set({ matrix: newMatrix });\n  },\n  resetMatrix: () =>\n    set({ vectors: INIT_VECTORS, lastMatrix: new Matrix3().identity() }),\n  applyMatrix: (matrix) => {\n    const vectors = get().vectors;\n\n    const updatedVectors = _.cloneDeep(vectors).map((vec) =>\n      vec.applyMatrix3(matrix)\n    );\n\n    set({ vectors: updatedVectors, lastMatrix: matrix });\n  },\n  lastMatrix: new Matrix3().identity(),\n  vectors: INIT_VECTORS,\n}));\n","import { useEffect, useRef } from \"react\";\nimport { MeshProps } from \"@react-three/fiber\";\nimport { Mesh, Vector3, Matrix3, Matrix4, Euler } from \"three\";\nimport * as TWEEN from \"@tweenjs/tween.js\";\nimport _ from \"lodash\";\n\ninterface CircleProps extends MeshProps {\n  vector: Vector3;\n  appliedMatrix: Matrix3;\n}\n\nexport const Circle = ({\n  vector,\n  appliedMatrix: matrix,\n  ...props\n}: CircleProps) => {\n  const mesh = useRef<Mesh>();\n\n  useEffect(() => {\n    if (mesh.current) {\n      // Check if it is a scale matrix (by checking whether is S).\n      const m = matrix.elements;\n      const isScaleMatrix =\n        m[1] + m[2] + m[3] + m[5] + m[6] + m[7] === 0 &&\n        m[0] + m[4] + m[8] !== 0;\n      if (isScaleMatrix) {\n        scale(vector, mesh.current);\n      } else {\n        rotate(matrix, mesh.current);\n      }\n    }\n  }, [mesh, vector, matrix]);\n\n  return (\n    <mesh position={vector} {...props} ref={mesh}>\n      <sphereGeometry args={[0.2, 32, 32]} />\n      <meshMatcapMaterial color=\"lightgreen\" />\n    </mesh>\n  );\n};\n\n/**\n * Rotates the vector with the rotation matrix. Make sure that the length stays\n * the same after the transformation, because this function only works with\n * rotation matrices. If there is any chance of the matrix not being a rotation\n * matrix, make use of the `vectorScale()` function.\n *\n * This calculates the euler angle from the rotation matrix, after which it\n * tweens between 0 and the euler angle. Then, every iteration of the tween, it\n * computes the matrix for the current euler angle and applies it to the vector.\n * @param matrix rotation matrix.\n * @param objVector vector object to move.\n */\nconst rotate = (matrix: Matrix3, objVector: Mesh): void => {\n  // get angle and rotation axis from matrix\n  const [m00, m10, m20, m01, m11, m21, m02, m12, m22] = matrix.elements;\n\n  const m = new Matrix4();\n  m.set(m00, m01, m02, 1, m10, m11, m12, 1, m20, m21, m22, 1, 0, 0, 0, 1);\n\n  var eu = new Euler();\n  eu.setFromRotationMatrix(m, \"ZYX\");\n\n  const initPos = _.cloneDeep(objVector.position);\n  var euler = {\n    x: 0,\n    y: 0,\n    z: 0,\n  };\n  const e = { x: eu.x, y: eu.y, z: eu.z };\n\n  const tween = new TWEEN.Tween(euler)\n    .to(e, 1000)\n    .easing(TWEEN.Easing.Quadratic.Out)\n    .onUpdate(() => {\n      const eulerMatrix = new Matrix3();\n\n      // https://en.wikipedia.org/wiki/Rotation_formalisms_in_three_dimensions#Conversion_formulae_between_formalisms\n      const { x, y, z } = euler;\n      eulerMatrix.set(\n        Math.cos(y) * Math.cos(z),\n        -Math.cos(x) * Math.sin(z) + Math.sin(x) * Math.sin(y) * Math.cos(z),\n        Math.sin(x) * Math.sin(z) + Math.cos(x) * Math.sin(y) * Math.cos(z),\n        Math.cos(y) * Math.sin(z),\n        Math.cos(x) * Math.cos(z) + Math.sin(x) * Math.sin(y) * Math.sin(z),\n        -Math.sin(x) * Math.cos(z) + Math.cos(x) * Math.sin(y) * Math.sin(z),\n        -Math.sin(y),\n        Math.sin(x) * Math.cos(y),\n        Math.cos(x) * Math.cos(y)\n      );\n\n      const init = _.cloneDeep(initPos);\n      const pos = init.applyMatrix3(eulerMatrix);\n      objVector.position.set(pos.x, pos.y, pos.z);\n    });\n\n  tween.start();\n};\n\n/**\n * Moves `objVector` to the position of `vector` by scaling. It basically just\n * goes from the (x, y, z)-position of the object to the (x, y, z)-position of\n * the vector.\n * @param vector vector to go to.\n * @param objVector vector to move.\n */\nexport const scale = (vector: Vector3, mesh: Mesh): void => {\n  var pos = mesh.position;\n\n  const tween = new TWEEN.Tween(pos)\n    .to(vector)\n    .easing(TWEEN.Easing.Quadratic.Out)\n    .onUpdate(() => {\n      mesh.position.set(pos.x, pos.y, pos.z);\n    });\n\n  tween.start();\n};\n","import { useEffect, useState } from \"react\";\nimport { Vector3 } from \"three\";\nimport { useStore } from \"../../store\";\nimport { Circle } from \"./Circle\";\n\nexport const Vectors = () => {\n  const { vectors, matrix } = useStore((state) => ({\n    vectors: state.vectors,\n    matrix: state.lastMatrix,\n  }));\n\n  const [initVectors, setInitVectors] = useState<Array<Vector3>>([]);\n\n  useEffect(() => {\n    setInitVectors(vectors);\n  }, [vectors]);\n\n  return (\n    <>\n      {vectors.map((vector, i) => (\n        <Circle\n          key={i}\n          vector={vector}\n          appliedMatrix={matrix}\n          position={initVectors[i]}\n        />\n      ))}\n    </>\n  );\n};\n","import { memo, useCallback } from \"react\";\nimport { useThree } from \"@react-three/fiber\";\nimport * as TWEEN from \"@tweenjs/tween.js\";\n\nexport const RenderCycler = memo(() => {\n  const { gl, scene, camera } = useThree();\n\n  const render = useCallback(() => {\n    gl.render(scene, camera);\n  }, [gl, scene, camera]);\n\n  const animate = useCallback(() => {\n    requestAnimationFrame(animate);\n    TWEEN.update();\n    render();\n  }, [render]);\n\n  animate();\n\n  return <></>;\n});\n","import { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Vectors } from \"./threeworld/Vectors\";\nimport { RenderCycler } from \"./threeworld/RenderCycler\";\n\nexport const ThreeWorld = () => {\n  return (\n    <Canvas\n      dpr={window.devicePixelRatio}\n      style={{ height: window.innerHeight, width: window.innerWidth }}\n      camera={{\n        isPerspectiveCamera: true,\n        near: 0.1,\n        far: 1000,\n        fov: 75,\n        rotation: [-0.57, 0.74, 0.41],\n        position: [9.42, 5.59, 8.72],\n      }}\n    >\n      <ambientLight />\n      <gridHelper args={[100, 100, \"white\", \"gray\"]} />\n      <Vectors />\n      <RenderCycler />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useStore } from \"../../store\";\n\nexport const MatrixInput = () => {\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\",\n        gridTemplateRows: \"repeat(3, 1fr)\",\n        gridGap: \"0.5rem\",\n        zIndex: 1,\n      }}\n    >\n      <InputCell index={0} />\n      <InputCell index={1} />\n      <InputCell index={2} />\n      <InputCell index={3} />\n      <InputCell index={4} />\n      <InputCell index={5} />\n      <InputCell index={6} />\n      <InputCell index={7} />\n      <InputCell index={8} />\n    </div>\n  );\n};\n\ninterface InputCellProps {\n  index: number;\n}\n\nconst InputCell = ({ index }: InputCellProps) => {\n  const [matrix, setMatrixIndex] = useStore((state) => [\n    state.matrix,\n    state.setMatrixIndex,\n  ]);\n  const [value, setValue] = useState<string>(matrix.elements[index].toString());\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      const current = e.currentTarget.value;\n\n      if (!isNaN(parseFloat(current)) && current !== \"\") {\n        setMatrixIndex(index, parseFloat(current));\n      }\n\n      setValue(current);\n    },\n    [index, setMatrixIndex]\n  );\n\n  return (\n    <input\n      type=\"number\"\n      style={{\n        width: \"4ch\",\n        textAlign: \"center\",\n        fontFamily: \"Katex\",\n        color: \"lightgreen\",\n        backgroundColor: \"transparent\",\n        fontSize: 16,\n        border: \"none\",\n        outline: \"none\",\n        margin: \"0px auto\",\n      }}\n      value={value}\n      onChange={handleChange}\n    />\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport Latex from \"react-latex-next\";\nimport { Matrix3 } from \"three\";\nimport { useStore } from \"../../store\";\n\nimport \"./MatrixTransform.css\";\n\ninterface MatrixTransformProps {\n  matrix: Matrix3;\n  transpose?: boolean;\n}\n\nexport const MatrixTransform = ({\n  matrix,\n  transpose,\n}: MatrixTransformProps) => {\n  const applyMatrix = useStore((state) => state.applyMatrix);\n  const [matrixLatex, setMatrixLatex] = useState<string>(\"\");\n\n  useEffect(() => {\n    let latex = \"$$\\\\begin{bmatrix}\";\n    matrix.elements.forEach((elem, i) => {\n      if ((i + 1) % 3 === 0 && i + 1 !== 9) {\n        latex += `${elem.toFixed(2)} \\\\\\\\`;\n      } else if (i === 8) {\n        latex += elem.toFixed(2);\n      } else {\n        latex += `${elem.toFixed(2)} &`;\n      }\n    });\n\n    if (transpose) {\n      latex += \"\\\\end{bmatrix}^\\\\top$$\";\n    } else {\n      latex += \"\\\\end{bmatrix}$$\";\n    }\n\n    setMatrixLatex(latex);\n  }, [matrix, transpose]);\n\n  return (\n    <div\n      className=\"matrix\"\n      style={{ marginTop: transpose ? -4 : 0 }}\n      onClick={() => {\n        if (transpose) {\n          applyMatrix(matrix.transpose());\n        } else {\n          applyMatrix(matrix);\n        }\n      }}\n    >\n      <Latex>{matrixLatex}</Latex>\n    </div>\n  );\n};\n","interface RefreshIconProps {\n  color?: string;\n}\n\nexport const RefreshIcon = ({ color = \"white\" }: RefreshIconProps) => (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n    width={32}\n    height={32}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g\n      stroke={color}\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    >\n      <path d=\"M19.488,4.639v3.536h-3.535h3.535\"></path>\n      <path d=\"M19.027,8.175c-1.357,-2.487 -3.995,-4.175 -7.027,-4.175c-4.418,0 -8,3.582 -8,8c0,4.418 3.582,8 8,8c4.418,0 8,-3.582 8,-8\"></path>\n    </g>\n    <path fill=\"none\" d=\"M0,0h24v24h-24Z\"></path>\n  </svg>\n);\n","import { useCallback } from \"react\";\nimport { useStore } from \"../../store\";\nimport { RefreshIcon } from \"../icons/Refresh\";\n\nimport \"./Refresh.css\";\n\nexport const Refresh = () => {\n  const resetMatrix = useStore((state) => state.resetMatrix);\n\n  const handleResetClick = useCallback(() => {\n    resetMatrix();\n  }, [resetMatrix]);\n\n  return (\n    <button\n      style={{\n        background: \"none\",\n        color: \"inherit\",\n        border: \"none\",\n        padding: 0,\n        font: \"inherit\",\n        cursor: \"pointer\",\n        outline: \"inherit\",\n      }}\n      className=\"refresh\"\n      onClick={handleResetClick}\n    >\n      <RefreshIcon />\n    </button>\n  );\n};\n","import { SingularValueDecomposition } from \"ml-matrix\";\nimport Latex from \"react-latex-next\";\nimport { Matrix3 } from \"three\";\nimport { MatrixInput } from \"./controls/MatrixInput\";\nimport { MatrixTransform } from \"./controls/MatrixTransform\";\nimport { useStore } from \"../store\";\nimport { Refresh } from \"./controls/Refresh\";\n\nexport const Controls = () => {\n  const matrix = useStore((state) => state.matrix);\n  const m = matrix.transpose().elements;\n  const svd = new SingularValueDecomposition([\n    [m[0], m[1], m[2]],\n    [m[3], m[4], m[5]],\n    [m[6], m[7], m[8]],\n  ]);\n  // The package gives the negative of all values, so invert them\n  const U = new Matrix3().fromArray(\n    svd.leftSingularVectors.to1DArray().map((x) => -x)\n  );\n  const S = new Matrix3().fromArray(svd.diagonalMatrix.to1DArray());\n  const V = new Matrix3().fromArray(\n    svd.rightSingularVectors.to1DArray().map((x) => -x)\n  );\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        marginBottom: 16,\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"black\",\n          borderColor: \"gray\",\n          borderWidth: 2,\n          borderRadius: 16,\n          borderStyle: \"solid\",\n          padding: 16,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Refresh />\n        </div>\n        <div\n          style={{\n            alignItems: \"center\",\n            display: \"flex\",\n          }}\n        >\n          <MatrixInput />\n          <Latex>$$=$$</Latex>\n          <MatrixTransform matrix={U} />\n          <MatrixTransform matrix={S} />\n          <MatrixTransform matrix={V} transpose />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import \"katex/dist/katex.min.css\";\n\nimport { ThreeWorld } from \"./components/ThreeWorld\";\nimport { Controls } from \"./components/Controls\";\n\nconst App = () => {\n  return (\n    <>\n      <ThreeWorld />\n      <Controls />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}